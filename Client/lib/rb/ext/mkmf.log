have_func: checking for strlcpy() in string.h... -------------------- no

"gcc -o conftest -I/usr/include/ruby-1.9.1/x86_64-linux -I/usr/include/ruby-1.9.1/ruby/backward -I/usr/include/ruby-1.9.1 -I. -D_FORTIFY_SOURCE=2  -D_FORTIFY_SOURCE=2 -fsigned-char -g -O2 -Wall -Werror  conftest.c  -L. -L/usr/lib -L. -Wl,-Bsymbolic-functions -Wl,-z,relro -L/build/buildd/ruby1.9.1-1.9.3.484/debian/lib -rdynamic -Wl,-export-dynamic     -lruby-1.9.1  -lpthread -lrt -ldl -lcrypt -lm   -lc"
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: int main(int argc, char **argv)
4: {
5:   return 0;
6: }
/* end */

"gcc -o conftest -I/usr/include/ruby-1.9.1/x86_64-linux -I/usr/include/ruby-1.9.1/ruby/backward -I/usr/include/ruby-1.9.1 -I. -D_FORTIFY_SOURCE=2  -D_FORTIFY_SOURCE=2 -fsigned-char -g -O2 -Wall -Werror  conftest.c  -L. -L/usr/lib -L. -Wl,-Bsymbolic-functions -Wl,-z,relro -L/build/buildd/ruby1.9.1-1.9.3.484/debian/lib -rdynamic -Wl,-export-dynamic     -lruby-1.9.1  -lpthread -lrt -ldl -lcrypt -lm   -lc"
conftest.c: In function ‘t’:
conftest.c:6:28: error: variable ‘p’ set but not used [-Werror=unused-but-set-variable]
 int t() { void ((*volatile p)()); p = (void ((*)()))strlcpy; return 0; }
                            ^
cc1: all warnings being treated as errors
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: #include <string.h>
 4: 
 5: /*top*/
 6: int t() { void ((*volatile p)()); p = (void ((*)()))strlcpy; return 0; }
 7: int main(int argc, char **argv)
 8: {
 9:   if (argc > 1000000) {
10:     printf("%p", &t);
11:   }
12: 
13:   return 0;
14: }
/* end */

"gcc -o conftest -I/usr/include/ruby-1.9.1/x86_64-linux -I/usr/include/ruby-1.9.1/ruby/backward -I/usr/include/ruby-1.9.1 -I. -D_FORTIFY_SOURCE=2  -D_FORTIFY_SOURCE=2 -fsigned-char -g -O2 -Wall -Werror  conftest.c  -L. -L/usr/lib -L. -Wl,-Bsymbolic-functions -Wl,-z,relro -L/build/buildd/ruby1.9.1-1.9.3.484/debian/lib -rdynamic -Wl,-export-dynamic     -lruby-1.9.1  -lpthread -lrt -ldl -lcrypt -lm   -lc"
conftest.c: In function ‘t’:
conftest.c:6:1: error: too few arguments to function ‘strlcpy’
 int t() { strlcpy(); return 0; }
 ^
In file included from /usr/include/ruby-1.9.1/ruby/ruby.h:1382:0,
                 from /usr/include/ruby-1.9.1/ruby.h:32,
                 from conftest.c:1:
/usr/include/ruby-1.9.1/ruby/missing.h:196:20: note: declared here
 RUBY_EXTERN size_t strlcpy(char *, const char*, size_t);
                    ^
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: #include <string.h>
 4: 
 5: /*top*/
 6: int t() { strlcpy(); return 0; }
 7: int main(int argc, char **argv)
 8: {
 9:   if (argc > 1000000) {
10:     printf("%p", &t);
11:   }
12: 
13:   return 0;
14: }
/* end */

--------------------

